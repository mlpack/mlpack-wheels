jobs:
- job: linux
  strategy:
    matrix:
      # I literally cannot believe that Azure Pipelines does not support
      # multiple axis builds.
      cp36-manylinux_x86_64:
        CIBW_BUILD: cp36-manylinux_x86_64
      cp37-manylinux_x86_64:
        CIBW_BUILD: cp37-manylinux_x86_64
      cp38-manylinux_x86_64:
        CIBW_BUILD: cp38-manylinux_x86_64
      cp39-manylinux_x86_64:
        CIBW_BUILD: cp39-manylinux_x86_64
      cp310-manylinux_x86_64:
        CIBW_BUILD: cp310-manylinux_x86_64
      cp311-manylinux_x86_64:
        CIBW_BUILD: cp311-manylinux_x86_64
      pp37-manylinux_x86_64:
        CIBW_BUILD: pp37-manylinux_x86_64
      pp38_manylinux_x86_64:
        CIBW_BUILD: pp38-manylinux_x86_64
      pp39_manylinux_x86_64:
        CIBW_BUILD: pp39-manylinux_x86_64

      cp36-manylinux_i686:
        CIBW_BUILD: cp36-manylinux_i686
      cp37-manylinux_i686:
        CIBW_BUILD: cp37-manylinux_i686
      cp38-manylinux_i686:
        CIBW_BUILD: cp38-manylinux_i686
      cp39-manylinux_i686:
        CIBW_BUILD: cp39-manylinux_i686
      cp310-manylinux_i686:
        CIBW_BUILD: cp310-manylinux_i686
      cp311-manylinux_i686:
        CIBW_BUILD: cp311-manylinux_i686
      pp37-manylinux_i686:
        CIBW_BUILD: pp37-manylinux_i686
      pp38_manylinux_i686:
        CIBW_BUILD: pp38-manylinux_i686
      pp39_manylinux_i686:
        CIBW_BUILD: pp39-manylinux_i686

      cp36-manylinux_aarch64:
        CIBW_BUILD: cp36-manylinux_aarch64
      cp37-manylinux_aarch64:
        CIBW_BUILD: cp37-manylinux_aarch64
      cp38-manylinux_aarch64:
        CIBW_BUILD: cp38-manylinux_aarch64
      cp39-manylinux_aarch64:
        CIBW_BUILD: cp39-manylinux_aarch64
      cp310-manylinux_aarch64:
        CIBW_BUILD: cp310-manylinux_aarch64
      cp311-manylinux_aarch64:
        CIBW_BUILD: cp311-manylinux_aarch64
      pp37-manylinux_aarch64:
        CIBW_BUILD: pp37-manylinux_aarch64
      pp38_manylinux_aarch64:
        CIBW_BUILD: pp38-manylinux_aarch64
      pp39_manylinux_aarch64:
        CIBW_BUILD: pp39-manylinux_aarch64

      cp36-manylinux_ppc64le:
        CIBW_BUILD: cp36-manylinux_ppc64le
      cp37-manylinux_ppc64le:
        CIBW_BUILD: cp37-manylinux_ppc64le
      cp38-manylinux_ppc64le:
        CIBW_BUILD: cp38-manylinux_ppc64le
      cp39-manylinux_ppc64le:
        CIBW_BUILD: cp39-manylinux_ppc64le
      cp310-manylinux_ppc64le:
        CIBW_BUILD: cp310-manylinux_ppc64le
      cp311-manylinux_ppc64le:
        CIBW_BUILD: cp311-manylinux_ppc64le

      cp36-manylinux_s390x:
        CIBW_BUILD: cp36-manylinux_s390x
      cp37-manylinux_s390x:
        CIBW_BUILD: cp37-manylinux_s390x
      cp38-manylinux_s390x:
        CIBW_BUILD: cp38-manylinux_s390x
      cp39-manylinux_s390x:
        CIBW_BUILD: cp39-manylinux_s390x
      cp310-manylinux_s390x:
        CIBW_BUILD: cp310-manylinux_s390x
      cp311-manylinux_s390x:
        CIBW_BUILD: cp311-manylinux_s390x

      cp36-musllinux_x86_64:
        CIBW_BUILD: cp36-musllinux_x86_64
      cp37-musllinux_x86_64:
        CIBW_BUILD: cp37-musllinux_x86_64
      cp38-musllinux_x86_64:
        CIBW_BUILD: cp38-musllinux_x86_64
      cp39-musllinux_x86_64:
        CIBW_BUILD: cp39-musllinux_x86_64
      cp310-musllinux_x86_64:
        CIBW_BUILD: cp310-musllinux_x86_64
      cp311-musllinux_x86_64:
        CIBW_BUILD: cp311-musllinux_x86_64

      cp36-musllinux_i686:
        CIBW_BUILD: cp36-musllinux_i686
      cp37-musllinux_i686:
        CIBW_BUILD: cp37-musllinux_i686
      cp38-musllinux_i686:
        CIBW_BUILD: cp38-musllinux_i686
      cp39-musllinux_i686:
        CIBW_BUILD: cp39-musllinux_i686
      cp310-musllinux_i686:
        CIBW_BUILD: cp310-musllinux_i686
      cp311-musllinux_i686:
        CIBW_BUILD: cp311-musllinux_i686

      cp36-musllinux_aarch64:
        CIBW_BUILD: cp36-musllinux_aarch64
      cp37-musllinux_aarch64:
        CIBW_BUILD: cp37-musllinux_aarch64
      cp38-musllinux_aarch64:
        CIBW_BUILD: cp38-musllinux_aarch64
      cp39-musllinux_aarch64:
        CIBW_BUILD: cp39-musllinux_aarch64
      cp310-musllinux_aarch64:
        CIBW_BUILD: cp310-musllinux_aarch64
      cp311-musllinux_aarch64:
        CIBW_BUILD: cp311-musllinux_aarch64

      cp36-musllinux_ppc64le:
        CIBW_BUILD: cp36-musllinux_ppc64le
      cp37-musllinux_ppc64le:
        CIBW_BUILD: cp37-musllinux_ppc64le
      cp38-musllinux_ppc64le:
        CIBW_BUILD: cp38-musllinux_ppc64le
      cp39-musllinux_ppc64le:
        CIBW_BUILD: cp39-musllinux_ppc64le
      cp310-musllinux_ppc64le:
        CIBW_BUILD: cp310-musllinux_ppc64le
      cp311-musllinux_ppc64le:
        CIBW_BUILD: cp311-musllinux_ppc64le

      cp36-musllinux_s390x:
        CIBW_BUILD: cp36-musllinux_s390x
      cp37-musllinux_s390x:
        CIBW_BUILD: cp37-musllinux_s390x
      cp38-musllinux_s390x:
        CIBW_BUILD: cp38-musllinux_s390x
      cp39-musllinux_s390x:
        CIBW_BUILD: cp39-musllinux_s390x
      cp310-musllinux_s390x:
        CIBW_BUILD: cp310-musllinux_s390x
      cp311-musllinux_s390x:
        CIBW_BUILD: cp311-musllinux_s390x

      cp36-macosx_x86_64:
        CIBW_BUILD: cp36-macosx_x86_64
      cp37-macosx_x86_64:
        CIBW_BUILD: cp37-macosx_x86_64
      cp38-macosx_x86_64:
        CIBW_BUILD: cp38-macosx_x86_64
      cp38-macosx_universal2:
        CIBW_BUILD: cp38-macosx_universal2
      cp38-macosx_arm64:
        CIBW_BUILD: cp38-macosx_arm64
      cp39-macosx_x86_64:
        CIBW_BUILD: cp39-macosx_x86_64
      cp39-macosx_universal2:
        CIBW_BUILD: cp39-macosx_universal2
      cp39-macosx_arm64:
        CIBW_BUILD: cp39-macosx_arm64
      cp310-macosx_x86_64:
        CIBW_BUILD: cp310-macosx_x86_64
      cp310-macosx_universal2:
        CIBW_BUILD: cp310-macosx_universal2
      cp310-macosx_arm64:
        CIBW_BUILD: cp310-macosx_arm64
      cp311-macosx_x86_64:
        CIBW_BUILD: cp311-macosx_x86_64
      cp311-macosx_universal2:
        CIBW_BUILD: cp311-macosx_universal2
      cp311-macosx_arm64:
        CIBW_BUILD: cp311-macosx_arm64
      pp37-macosx_x86_64:
        CIBW_BUILD: pp37-macosx_x86_64
      pp38-macosx_x86_64:
        CIBW_BUILD: pp38-macosx_x86_64
      pp39-macosx_x86_64:
        CIBW_BUILD: pp39-macosx_x86_64

      cp36-win_amd64:
        CIBW_BUILD: cp36-win_amd64
      cp36-win32:
        CIBW_BUILD: cp36-win32
      cp37-win_amd64:
        CIBW_BUILD: cp37-win_amd64
      cp37-win32:
        CIBW_BUILD: cp37-win32
      cp38-win_amd64:
        CIBW_BUILD: cp38-win_amd64
      cp38-win32:
        CIBW_BUILD: cp38-win32
      cp39-win_amd64:
        CIBW_BUILD: cp39-win_amd64
      cp39-win32:
        CIBW_BUILD: cp39-win32
      cp39-win_arm64:
        CIBW_BUILD: cp39-win_arm64
      cp310-win_amd64:
        CIBW_BUILD: cp310-win_amd64
      cp310-win32:
        CIBW_BUILD: cp310-win32
      cp310-win_arm64:
        CIBW_BUILD: cp310-win_arm64
      cp311-win_amd64:
        CIBW_BUILD: cp311-win_amd64
      cp311-win32:
        CIBW_BUILD: cp311-win32
      cp311-win_arm64:
        CIBW_BUILD: cp311-win_arm64
      pp37-win_amd64:
        CIBW_BUILD: pp37-win_amd64
      pp38-win_amd64:
        CIBW_BUILD: pp38-win_amd64
      pp39-win_amd64:
        CIBW_BUILD: pp39-win_amd64

  timeoutInMinutes: 0 # No limit for build time.
  pool: {vmImage: 'Ubuntu-20.04'}
  variables:
    MLPACK_VERSION: 4.0.0
    CIBW_TEST_COMMAND: python -c 'import mlpack; import numpy as np; x = np.random.rand(100, 10); o = mlpack.pca(input_=x, new_dimensionality=5, verbose=True)'
    # The PYPI_TOKEN variable is automatically set by Azure Pipelines.
    TWINE_PYPI_TOKEN: $(PYPI_TOKEN)
  steps:
    - task: UsePythonVersion@0
    - bash: |
        set -o errexit
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel cython numpy pandas setuptools twine
        sudo apt-get update
        sudo apt-get install libarmadillo-dev libcereal-dev g++ cmake libensmallen-dev
      displayName: Install dependencies

    - bash: |
        git clone https://github.com/mlpack/mlpack
        cd mlpack
        git checkout $(MLPACK_VERSION)
      displayName: Clone mlpack

    - bash: |
        mkdir -p mlpack/build
        cd mlpack/build
        cmake -DBUILD_PYTHON_BINDINGS=ON ../
        make python_configured
      displayName: Generate setup.py

    - bash: |
        export CIBW_BEFORE_BUILD="pwd && ls && ./build_mlpack.sh"
        cibuildwheel --output-dir wheelhouse mlpack/build/src/mlpack/bindings/python/
      displayName: Build wheels

    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}

    - bash: |
        echo "[pypi]" > ~/.pypirc
        echo "username = __token__" >> ~/.pypirc
        echo "password = $(TWINE_PYPI_TOKEN)" >> ~/.pypirc
        twine upload wheelhouse/*.whl
        rm -f ~/.pypirc
      displayName: Push wheels to PyPI
